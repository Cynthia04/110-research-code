alpha1[i] <- alpha <- min(exp(tll.wei(c(z1,a10,b00,b10,s00,s10),Ti)-tll.wei(c(a00,a10,b00,b10,s00,s10),Ti))*p1/p0,1)
if(alpha>u[i]){
a0[i] <- z1
}else{
a0[i] <- a00
}
a00 <- a0[i]
#a1
repeat{
z2 <- rnorm(1,a10,sigma)
if(z2>0){break}
}
p1 <- exp(-(z2-t3.wei[2,1])^2/(2*sigma^2))
p0 <- exp(-(a10-t3.wei[2,1])^2/(2*sigma^2))
alpha2[i] <- alpha <- min(exp(tll.wei(c(a00,z2,b00,b10,s00,s10),Ti)-tll.wei(c(a00,a10,b00,b10,s00,s10),Ti))*p1/p0,1)
if(alpha>u[i]){
a1[i] <- z2
}else{
a1[i] <- a10
}
a10 <- a1[i]
#b0
repeat{
z3 <- rnorm(1,b00,sigma)
if(z3>0){break}
}
p1 <- -(z3-t3.wei[3,1])^2/(2*sigma^2)
p0 <- -(b00-t3.wei[3,1])^2/(2*sigma^2)
alpha3[i] <- alpha <- min(exp(tll.wei(c(a00,a10,z3,b10,s00,s10),Ti)-tll.wei(c(a00,a10,b00,b10,s00,s10),Ti))*exp(p1-p0),1)
if(alpha>u[i]){
b0[i] <- z3
}else{
b0[i] <- b00
}
b00 <- b0[i]
#b1
repeat{
z4 <- rnorm(1,b10,sigma)
if(z4>0){break}
}
p1 <- exp(-(z4-t3.wei[4,1])^2/(2*sigma^2))
p0 <- exp(-(b10-t3.wei[4,1])^2/(2*sigma^2))
alpha4[i] <- alpha <- min(exp(tll.wei(c(a00,a10,b00,z4,s00,s10),Ti)-tll.wei(c(a00,a10,b00,b10,s00,s10),Ti))*p1/p0,1)
if(alpha>u[i]){
b1[i] <- z4
}else{
b1[i] <- b10
}
b10 <- b1[i]
#beta0
repeat{
z5 <- rnorm(1,s00,sigma)
if(z5>0){break}
}
p1 <- -(z5-t3.wei[5,1])^2/(2*sigma^2)
p0 <- -(s00-t3.wei[5,1])^2/(2*sigma^2)
alpha5[i] <- alpha <- min(exp(tll.wei(c(a00,a10,b00,b10,z5,s10),Ti)-tll.wei(c(a00,a10,b00,b10,s00,s10),Ti))*exp(p1-p0),1)
if(alpha>u[i]){
s0[i] <- z5
}else{
s0[i] <- s00
}
s00 <- s0[i]
#beta1
z6 <- rnorm(1,s10,sigma)
p1 <- -(z6-t3.wei[6,1])^2/(2*sigma^2)
p0 <- -(s10-t3.wei[6,1])^2/(2*sigma^2)
alpha6[i] <- alpha <- min(exp(tll.wei(c(a00,a10,b00,b10,s00,z6),Ti)-tll.wei(c(a00,a10,b00,b10,s00,s10),Ti))*exp(p1-p0),1)
if(alpha>u[i]){
s1[i] <- z6
}else{
s1[i] <- s10
}
s10 <- s1[i]
}
end <- Sys.time()
end-start
tll.wei<- function(theta,data){ # ll is -loglikeihood, -ans -> here is logL
a0 <- theta[1];a1 <- theta[2];b0 <- theta[3];b1 <- theta[4];s0 <- theta[5];s1 <- theta[6]
aS <- apply(matrix(sk,ncol = 1),1,function(x) a0+a1*x)
bS <- apply(matrix(sk,ncol = 1),1,function(x) b0+b1*x)
sS <- apply(matrix(sk,ncol = 1),1,function(x) s0+s1*x)
t1 <- sum(apply(matrix(1:n1,ncol = 1),1,function(x) ll.wei(aS[1],bS[1],sS[1],data[,x])))
t2 <- sum(apply(matrix((n1+1):(n1+n2),ncol = 1),1,function(x) ll.wei(aS[2],bS[2],sS[2],data[,x])))
t3 <- sum(apply(matrix((n1+n2+1):nk,ncol = 1),1,function(x) ll.wei(aS[3],bS[3],sS[3],data[,x])))
ans <- t1+t2+t3
-ans
}
m=5*10^4;N=5000;k=10
a00 <- 3;a10 <- 2;b00 <- 5;b10 <- 4;s00 <-20;s10 <- -5;sigma=0.1
a0 <- c();a1 <- c();b0 <- c();b1 <- c();s0 <- c();s1 <- c()
alpha1 <- c(); alpha2 <- c(); alpha3 <- c(); alpha4 <- c(); alpha5 <- c(); alpha6 <- c()
u <- runif(m+N*k)
start <- Sys.time()
for(i in 1:(m+N*k)){
#a0
repeat{
z1 <- rnorm(1,a00,sigma)
if(z1>0){break}
}
p1 <- exp(-(z1-t3.wei[1,1])^2/(2*sigma^2))
p0 <- exp(-(a00-t3.wei[1,1])^2/(2*sigma^2))
alpha1[i] <- alpha <- min(exp(tll.wei(c(z1,a10,b00,b10,s00,s10),Ti)-tll.wei(c(a00,a10,b00,b10,s00,s10),Ti))*p1/p0,1)
if(alpha>u[i]){
a0[i] <- z1
}else{
a0[i] <- a00
}
a00 <- a0[i]
#a1
repeat{
z2 <- rnorm(1,a10,sigma)
if(z2>0){break}
}
p1 <- exp(-(z2-t3.wei[2,1])^2/(2*sigma^2))
p0 <- exp(-(a10-t3.wei[2,1])^2/(2*sigma^2))
alpha2[i] <- alpha <- min(exp(tll.wei(c(a00,z2,b00,b10,s00,s10),Ti)-tll.wei(c(a00,a10,b00,b10,s00,s10),Ti))*p1/p0,1)
if(alpha>u[i]){
a1[i] <- z2
}else{
a1[i] <- a10
}
a10 <- a1[i]
#b0
repeat{
z3 <- rnorm(1,b00,sigma)
if(z3>0){break}
}
p1 <- -(z3-t3.wei[3,1])^2/(2*sigma^2)
p0 <- -(b00-t3.wei[3,1])^2/(2*sigma^2)
alpha3[i] <- alpha <- min(exp(tll.wei(c(a00,a10,z3,b10,s00,s10),Ti)-tll.wei(c(a00,a10,b00,b10,s00,s10),Ti))*exp(p1-p0),1)
if(alpha>u[i]){
b0[i] <- z3
}else{
b0[i] <- b00
}
b00 <- b0[i]
#b1
repeat{
z4 <- rnorm(1,b10,sigma)
if(z4>0){break}
}
p1 <- exp(-(z4-t3.wei[4,1])^2/(2*sigma^2))
p0 <- exp(-(b10-t3.wei[4,1])^2/(2*sigma^2))
alpha4[i] <- alpha <- min(exp(tll.wei(c(a00,a10,b00,z4,s00,s10),Ti)-tll.wei(c(a00,a10,b00,b10,s00,s10),Ti))*p1/p0,1)
if(alpha>u[i]){
b1[i] <- z4
}else{
b1[i] <- b10
}
b10 <- b1[i]
#beta0
repeat{
z5 <- rnorm(1,s00,sigma)
if(z5>0){break}
}
p1 <- -(z5-t3.wei[5,1])^2/(2*sigma^2)
p0 <- -(s00-t3.wei[5,1])^2/(2*sigma^2)
alpha5[i] <- alpha <- min(exp(tll.wei(c(a00,a10,b00,b10,z5,s10),Ti)-tll.wei(c(a00,a10,b00,b10,s00,s10),Ti))*exp(p1-p0),1)
if(alpha>u[i]){
s0[i] <- z5
}else{
s0[i] <- s00
}
s00 <- s0[i]
#beta1
z6 <- rnorm(1,s10,sigma)
p1 <- -(z6-t3.wei[6,1])^2/(2*sigma^2)
p0 <- -(s10-t3.wei[6,1])^2/(2*sigma^2)
alpha6[i] <- alpha <- min(exp(tll.wei(c(a00,a10,b00,b10,s00,z6),Ti)-tll.wei(c(a00,a10,b00,b10,s00,s10),Ti))*exp(p1-p0),1)
if(alpha>u[i]){
s1[i] <- z6
}else{
s1[i] <- s10
}
s10 <- s1[i]
}
end <- Sys.time()
end-start
mcmc <- function(x){return(c(mean(x),sd(x),quantile(x, probs = c(0.025, 0.975))))}
mcmc_table <- t(apply(rbind(a0[seq(m+k,m+N*k,k)],a1[seq(m+k,m+N*k,k)],b0[seq(m+k,m+N*k,k)],
b1[seq(m+k,m+N*k,k)],s0[seq(m+k,m+N*k,k)],s1[seq(m+k,m+N*k,k)]),1,mcmc))
mcmc_table
par(mfrow=c(3,2))
plot(a0[seq(m+k,m+N*k,k)],type = "p",xlab = "iteration number",ylab="MCMC sample",main="posterior sample of a0")
plot(a1[seq(m+k,m+N*k,k)],type = "p",xlab = "iteration number",ylab="MCMC sample",main="posterior sample of a1")
plot(b0[seq(m+k,m+N*k,k)],type = "p",xlab = "iteration number",ylab="MCMC sample",main="posterior sample of b0")
plot(b1[seq(m+k,m+N*k,k)],type = "p",xlab = "iteration number",ylab="MCMC sample",main="posterior sample of b1")
plot(s0[seq(m+k,m+N*k,k)],type = "p",xlab = "iteration number",ylab="MCMC sample",main="posterior sample of sigma0")
plot(s1[seq(m+k,m+N*k,k)],type = "p",xlab = "iteration number",ylab="MCMC sample",main="posterior sample of sigma1")
par(mfrow=c(1,1))
par(mfrow=c(3,1))
plot(density(a0[seq(m+k,m+N*k,k)]),main="posterior density of a0")
plot(density(a1[seq(m+k,m+N*k,k)]),main="posterior density of a1")
plot(density(b0[seq(m+k,m+N*k,k)]),main="posterior density of b0")
plot(density(b1[seq(m+k,m+N*k,k)]),main="posterior density of b1")
plot(density(s0[seq(m+k,m+N*k,k)]),main="posterior density of beta0")
plot(density(s1[seq(m+k,m+N*k,k)]),main="posterior density of beta1")
par(mfrow=c(1,1))
density(a0[seq(m+k,m+N*k,k)])
library(ggplot2)               #imports ggplot2
library(dplyr)                 #imports dplyr
data
#loads the data from the .txt file with header true.
data <- data.frame("a0"=a0[seq(m+k,m+N*k,k)],
"a1"=a1[seq(m+k,m+N*k,k)],
"b0"=b0[seq(m+k,m+N*k,k)],
"b1"=b1[seq(m+k,m+N*k,k)],
"s0"=s0[seq(m+k,m+N*k,k)],
"s1"=s1[seq(m+k,m+N*k,k)])
#creating the density plot
data %>%
+     ggplot( aes(x=a0)) +
+    geom_density(fill="#4D9DDA", color="#4D9DDA", alpha=0.8)
data
str(sata)
str(data)
#creating the density plot
data %>%
+     ggplot( aes(x=a0)) +
+    geom_density(fill="#4D9DDA", color="#4D9DDA", alpha=0.8)
#creating the density plot
data %>%
+     ggplot( aes(x="a0")) +
+    geom_density(fill="#4D9DDA", color="#4D9DDA", alpha=0.8)
a.0
#loads the data from the .txt file with header true.
data <- data.frame(a.0=a0[seq(m+k,m+N*k,k)],
a.1=a1[seq(m+k,m+N*k,k)],
b.0=b0[seq(m+k,m+N*k,k)],
b.1=b1[seq(m+k,m+N*k,k)],
s.0=s0[seq(m+k,m+N*k,k)],
s.1=s1[seq(m+k,m+N*k,k)])
str(data)
#creating the density plot
data %>%
+     ggplot( aes(x=a.0)) +
+    geom_density(fill="#4D9DDA", color="#4D9DDA", alpha=0.8)
data=as.data.frame(data)
#creating the density plot
data %>%
+     ggplot( aes(x=a.0)) +
+    geom_density(fill="#4D9DDA", color="#4D9DDA", alpha=0.8)
data
#creating the density plot
ggplot(data, aes(x=a.0))+geom_density( aes(x = data1, y = ..density..), fill="#D2CE12" )
#creating the density plot
ggplot(data, aes(x=a.0))+geom_density( aes(x = a.0, y = ..density..), fill="#D2CE12" )
#creating the density plot
rm(data)
par(mfrow=c(3,2))
plot(a0,type = "l",xlab = "iteration times",ylab="a0",main="Trace of MCMC sample of a0")
plot(a1,type = "l",xlab = "iteration times",ylab="a1",main="Trace of MCMC sample of a1")
plot(b0,type = "l",xlab = "iteration times",ylab="b0",main="Trace of MCMC sample of b0")
plot(b1,type = "l",xlab = "iteration times",ylab="b1",main="Trace of MCMC sample of b1")
plot(s0,type = "l",xlab = "iteration times",ylab="beta0",main="Trace of MCMC sample of beta0")
plot(s1,type = "l",xlab = "iteration times",ylab="beta1",main="Trace of MCMC sample beta1")
par(mfrow=c(1,1))
par(mfrow=c(3,1))
plot(a0,type = "l",xlab = "iteration times",ylab="a0",main="Trace of MCMC sample of a0")
plot(a1,type = "l",xlab = "iteration times",ylab="a1",main="Trace of MCMC sample of a1")
plot(b0,type = "l",xlab = "iteration times",ylab="b0",main="Trace of MCMC sample of b0")
plot(b1,type = "l",xlab = "iteration times",ylab="b1",main="Trace of MCMC sample of b1")
plot(s0,type = "l",xlab = "iteration times",ylab="beta0",main="Trace of MCMC sample of beta0")
plot(s1,type = "l",xlab = "iteration times",ylab="beta1",main="Trace of MCMC sample beta1")
par(mfrow=c(1,1))
mcmc_table
colnames(mcmc_table)[1:2] <- c("mean","sd")
mcmc_table
t3
cbind(True=c(3,2,5,4,20,-5),mcmc_table)
t3.wei
cbind(True=c(3,2,5,4,20,-5),mcmc_table[,1],mle=t3.wei[1:6,1],
mcmc_table[,2],mle=t3.wei[8:13,1],mcmc_table[,-c(1:2)])
cbind(True=c(3,2,5,4,20,-5),mcmc_table[,1],mle=t3.wei[1:6,1],
mcmc_table[,2],sd of mle=t3.wei[8:13,1],mcmc_table[,-c(1:2)])
cbind(True=c(3,2,5,4,20,-5),mcmc_table[,1],mle=t3.wei[1:6,1],
mcmc_table[,2],"sd of mle"=t3.wei[8:13,1],mcmc_table[,-c(1:2)])
cbind(True=c(3,2,5,4,20,-5),mean=mcmc_table[,1],mle=t3.wei[1:6,1],
sd=mcmc_table[,2],"sd of mle"=t3.wei[8:13,1],mcmc_table[,-c(1:2)])
mcmc_table <- cbind(True=c(3,2,5,4,20,-5),mean=mcmc_table[,1],mle=t3.wei[1:6,1],
sd=mcmc_table[,2],"sd of mle"=t3.wei[8:13,1],mcmc_table[,-c(1:2)])
mcmc_table
write.csv(mcmc_table,"mcmc.csv")
mean(alpha1)
apply(rbind(alpha1,alpha2,alpha3,alpha4,alpha5,alpha6),1,mean)
sigma
par(mfrow=c(3,1))
plot(a0,type = "l",xlab = "iteration times (1e+05)",ylab="a0",main="Trace of MCMC sample of a0")
plot(a1,type = "l",xlab = "iteration times (1e+05)",ylab="a1",main="Trace of MCMC sample of a1")
plot(b0,type = "l",xlab = "iteration times (1e+05)",ylab="b0",main="Trace of MCMC sample of b0")
plot(b1,type = "l",xlab = "iteration times (1e+05)",ylab="b1",main="Trace of MCMC sample of b1")
plot(s0,type = "l",xlab = "iteration times (1e+05)",ylab="beta0",main="Trace of MCMC sample of beta0")
plot(s1,type = "l",xlab = "iteration times (1e+05)",ylab="beta1",main="Trace of MCMC sample beta1")
par(mfrow=c(1,1))
par(mfrow=c(3,1))
plot(a0,type = "l",xlab = "iteration times (1e+05)",ylab="a0",main="Trace of MCMC sample of a0",
cex.lab=2, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(a1,type = "l",xlab = "iteration times (1e+05)",ylab="a1",main="Trace of MCMC sample of a1",
cex.lab=2, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(b0,type = "l",xlab = "iteration times (1e+05)",ylab="b0",main="Trace of MCMC sample of b0",
cex.lab=2, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(b1,type = "l",xlab = "iteration times (1e+05)",ylab="b1",main="Trace of MCMC sample of b1",
cex.lab=2, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(s0,type = "l",xlab = "iteration times (1e+05)",ylab="beta0",main="Trace of MCMC sample of beta0",
cex.lab=2, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(s1,type = "l",xlab = "iteration times (1e+05)",ylab="beta1",main="Trace of MCMC sample beta1",
cex.lab=2, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
par(mfrow=c(1,1))
par(mfrow=c(3,1))
plot(a0,type = "l",xlab = "iteration times (1e+05)",ylab="a0",main="Trace of MCMC sample of a0",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(a1,type = "l",xlab = "iteration times (1e+05)",ylab="a1",main="Trace of MCMC sample of a1",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(b0,type = "l",xlab = "iteration times (1e+05)",ylab="b0",main="Trace of MCMC sample of b0",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(b1,type = "l",xlab = "iteration times (1e+05)",ylab="b1",main="Trace of MCMC sample of b1",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(s0,type = "l",xlab = "iteration times (1e+05)",ylab="beta0",main="Trace of MCMC sample of beta0",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(s1,type = "l",xlab = "iteration times (1e+05)",ylab="beta1",main="Trace of MCMC sample beta1",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
par(mfrow=c(6,1))
plot(a0,type = "l",xlab = "iteration times (1e+05)",ylab="a0",main="Trace of MCMC sample of a0",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(a1,type = "l",xlab = "iteration times (1e+05)",ylab="a1",main="Trace of MCMC sample of a1",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(b0,type = "l",xlab = "iteration times (1e+05)",ylab="b0",main="Trace of MCMC sample of b0",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(b1,type = "l",xlab = "iteration times (1e+05)",ylab="b1",main="Trace of MCMC sample of b1",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(s0,type = "l",xlab = "iteration times (1e+05)",ylab="beta0",main="Trace of MCMC sample of beta0",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(s1,type = "l",xlab = "iteration times (1e+05)",ylab="beta1",main="Trace of MCMC sample beta1",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
par(mfrow=c(1,1))
par(mfrow=c(6,1))
plot(a0,type = "l",xlab = "iteration times (1e+05)",ylab="a0",main="Trace of MCMC sample of a0",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(a1,type = "l",xlab = "iteration times (1e+05)",ylab="a1",main="Trace of MCMC sample of a1",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(b0,type = "l",xlab = "iteration times (1e+05)",ylab="b0",main="Trace of MCMC sample of b0",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(b1,type = "l",xlab = "iteration times (1e+05)",ylab="b1",main="Trace of MCMC sample of b1",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(s0,type = "l",xlab = "iteration times (1e+05)",ylab="beta0",main="Trace of MCMC sample of beta0",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(s1,type = "l",xlab = "iteration times (1e+05)",ylab="beta1",main="Trace of MCMC sample beta1",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
par(mfrow=c(1,1))
par(mfrow=c(6,1))
plot(a0,type = "l",xlab = "iteration times (1e+05)",ylab="a0",main="Trace of MCMC sample of a0")
plot(a1,type = "l",xlab = "iteration times (1e+05)",ylab="a1",main="Trace of MCMC sample of a1")
plot(b0,type = "l",xlab = "iteration times (1e+05)",ylab="b0",main="Trace of MCMC sample of b0")
plot(b1,type = "l",xlab = "iteration times (1e+05)",ylab="b1",main="Trace of MCMC sample of b1")
plot(s0,type = "l",xlab = "iteration times (1e+05)",ylab="beta0",main="Trace of MCMC sample of beta0")
plot(s1,type = "l",xlab = "iteration times (1e+05)",ylab="beta1",main="Trace of MCMC sample beta1")
par(mfrow=c(1,1))
par(mfrow=c(3,1))
plot(a0[seq(m+k,m+N*k,k)],type = "l",xlab = "iteration times (5000)",
ylab="a0",main="Trace of posterior sample of a0",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(a1[seq(m+k,m+N*k,k)],type = "l",xlab = "iteration times (5000)",
ylab="a1",main="Trace of posterior sample of a1",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(b0[seq(m+k,m+N*k,k)],type = "l",xlab = "iteration times (5000)",
ylab="b0",main="Trace of posterior sample of b0",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(b1[seq(m+k,m+N*k,k)],type = "l",xlab = "iteration times (5000)",
ylab="b1",main="Trace of posterior sample of b1",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(s0[seq(m+k,m+N*k,k)],type = "l",xlab = "iteration times (5000)",
ylab="beta0",main="Trace of posterior sample of beta0",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(s1[seq(m+k,m+N*k,k)],type = "l",xlab = "iteration times (5000)",
ylab="beta1",main="Trace of posterior sample of beta1",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
par(mfrow=c(3,1))
plot(density(a0[seq(m+k,m+N*k,k)]),main="posterior density of a0",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(density(a1[seq(m+k,m+N*k,k)]),main="posterior density of a1",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(density(b0[seq(m+k,m+N*k,k)]),main="posterior density of b0",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(density(b1[seq(m+k,m+N*k,k)]),main="posterior density of b1",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(density(s0[seq(m+k,m+N*k,k)]),main="posterior density of beta0",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(density(s1[seq(m+k,m+N*k,k)]),main="posterior density of beta1",
cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
par <- read.csv("par0final.csv")
apply(par[1:3,],1,function(x){return(c(mean(x),sd(x),quantile(x,c(.025,.975))))})
TP <- c(3,5,20)
par <- as.matrix(par)
apply(matrix(1:3,ncol=1),1,function(x){mean((par[x,]-TP[x])^2)})
apply(par[1:3,],1,function(x){return(c(mean(x),sd(x),quantile(x,c(.025,.975))))})
TP <- c(3,5,20)
par <- as.matrix(par)
apply(matrix(1:3,ncol=1),1,function(x){mean((par[x,]-TP[x])^2)})
View(par)
par <- read.csv("par0final.csv")
par<- par[,-1]
apply(par[1:3,],1,function(x){return(c(mean(x),sd(x),quantile(x,c(.025,.975))))})
TP <- c(3,5,20)
par <- as.matrix(par)
apply(matrix(1:3,ncol=1),1,function(x){mean((par[x,]-TP[x])^2)})
par(mfrow=c(3,1))
hist(as.numeric(par[1,]),main=expression(paste("Histogram of ",a[0],"(98 simulation)")),
xlab = expression(a[0]))
abline(v=3,col="red",lty=2,lwd=2)
labels <- "True=3, \n mean=3.00154, \n sd=0.06201, \n MSE=0.00381"
legend("topleft",y.intersp=0.01,cex=1.5,bty="n",
labels, col=colors)
hist(as.numeric(par[2,]),main=expression(paste("Histogram of ",b[0],"(98 simulation)")),
xlab = expression(b[0]))
abline(v=5,col="red",lty=2,lwd=2)
labels <- "True=5, \n mean=4.99933, \n sd=0.02931, \n MSE=0.00085 "
legend("topleft",y.intersp=0.01,cex=1.5,bty="n",
labels, col=colors)
hist(as.numeric(par[3,]),main=expression(paste("Histogram of ",beta[0],"(98 simulation)")),
xlab = expression(beta[0]))
abline(v=20,col="red",lty=2,lwd=2)
labels <- "True=20, \n mean=20.35515, \n sd=1.39275, \n MSE=2.04608 "
legend("topleft",x.intersp=0.00000001,y.intersp=0.00001,cex=1.5,bty="n",
labels, col=colors)
par(mfrow=c(1,1))
par(mfrow=c(3,2))
hist(as.numeric(par[1,]),main=expression(paste("Histogram of ",a[0],"(1000 simulation)")),
xlab = expression(a[0]))
abline(v=3,col="red",lty=2,lwd=2)
labels <- "True=3, \n mean=3.00162, \n sd=0.06983, \n MSE=0.00487"
legend("topleft",y.intersp=0.01,cex=1.5,bty="n",
labels, col=colors)
hist(as.numeric(par[2,]),main=expression(paste("Histogram of ",a[1],"(1000 simulation)")),
xlab = expression(a[1]))
abline(v=2,col="red",lty=2,lwd=2)
labels <- "True=2, \n mean=2.00355 , \n sd=0.14098, \n MSE=0.01987"
legend("topleft",y.intersp=0.01,cex=1.5,bty="n",
labels, col=colors)
hist(as.numeric(par[3,]),main=expression(paste("Histogram of ",b[0],"(1000 simulation)")),
xlab = expression(b[0]))
abline(v=5,col="red",lty=2,lwd=2)
labels <- "True=5, \n mean=4.99938, \n sd=0.03337, \n MSE=0.00111 "
legend("topleft",y.intersp=0.01,cex=1.5,bty="n",
labels, col=colors)
hist(as.numeric(par[4,]),main=expression(paste("Histogram of ",b[1],"(1000 simulation)")),
xlab = expression(b[1]))
abline(v=4,col="red",lty=2,lwd=2)
labels <- "True=4, \n mean=3.99790, \n sd=0.06987, \n MSE=0.00488 "
legend("topleft",y.intersp=0.01,cex=1.5,bty="n",
labels, col=colors)
hist(as.numeric(par[5,]),main=expression(paste("Histogram of ",beta[0],"(1000 simulation)")),
xlab = expression(beta[0]))
abline(v=20,col="red",lty=2,lwd=2)
labels <- "True=20, \n mean=20.23702, \n sd=1.36473, \n MSE=1.91679 "
legend("topleft",x.intersp=0.00000001,y.intersp=0.00001,cex=1.5,bty="n",
labels, col=colors)
hist(as.numeric(par[6,]),main=expression(paste("Histogram of ",beta[1],"(1000 simulation)")),
xlab = expression(beta[1]))
par <- read.csv("par0final.csv")
par<- par[,-1]
apply(par[1:3,],1,function(x){return(c(mean(x),sd(x),quantile(x,c(.025,.975))))})
TP <- c(3,5,20)
par <- as.matrix(par)
apply(matrix(1:3,ncol=1),1,function(x){mean((par[x,]-TP[x])^2)})
par(mfrow=c(3,1))
hist(as.numeric(par[1,]),main=expression(paste("Histogram of ",a[0],"(98 simulation)")),
xlab = expression(a[0]))
abline(v=3,col="red",lty=2,lwd=2)
labels <- "True=3, \n mean=3.00154, \n sd=0.06201, \n MSE=0.00381"
legend("topleft",y.intersp=0.01,cex=1.5,bty="n",
labels, col=colors)
apply(matrix(1:3,ncol=1),1,function(x){mean((par[x,]-TP[x])^2)})
apply(par[1:3,],1,function(x){return(c(mean(x),sd(x),quantile(x,c(.025,.975))))})
apply(matrix(1:3,ncol=1),1,function(x){mean((par[x,]-TP[x])^2)})
table <- rbind(apply(par[1:3,],1,function(x){return(c(mean(x),sd(x),quantile(x,c(.025,.975))))}),
apply(matrix(1:3,ncol=1),1,function(x){mean((par[x,]-TP[x])^2)}))
table
colnames(table) <- c("a0","b0","beta0")
rownames(table) <- c("mean","sd","2.5%","97.5%","MSE")
table
t(table)
print("True="3)
print(paste("True="))
print(paste("True="),TP[1])
print(paste("True=",TP[1]))
print(paste("True=",TP[1],"\n mean=",table[1,1]))
round(table[1,1],5)
round(t(table),5)
table <- round(t(table),5)
print(paste("True=",TP[1],\n" mean=",round(table[1,1],5)))
print(paste("True=",TP[1],\n," mean=",round(table[1,1],5)))
print(1\n 3)
print(1 \n 3)
print(1 )
t3 <- matrix(c(3,
2,
5,
4,
20,
-5),ncol=2,byrow = T)
sk <- c(0.111,0.556,1)
est <- apply(t3,1,function(x) x[1]+sk*x[2])
colnames(est) <- c("a","b","s")
rownames(est) <- c("1C","3C","5C")
n1 <- 3 ;n2 <- 3 ;n3 <- 3
nk <- n1+n2+n3
est0 <- rbind(matrix(rep(est[1,],n1),ncol=3,byrow = T),
matrix(rep(est[2,],n2),ncol=3,byrow = T),
matrix(rep(est[3,],n3),ncol=3,byrow = T))
colnames(est0) <- c("a","b","s")
View(est0)
