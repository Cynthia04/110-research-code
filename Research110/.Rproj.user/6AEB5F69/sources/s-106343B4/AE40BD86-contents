t3 <- matrix(c(3,
               2,
               5,
               4,
               20,
               -5),ncol=2,byrow = T)
sk <- c(0.111,0.556,1)
est <- apply(t3,1,function(x) x[1]+sk*x[2])
colnames(est) <- c("a","b","s")
rownames(est) <- c("1C","3C","5C")
n1 <- 3 ;n2 <- 3 ;n3 <- 3
nk <- n1+n2+n3
est0 <- rbind(matrix(rep(est[1,],n1),ncol=3,byrow = T),
              matrix(rep(est[2,],n2),ncol=3,byrow = T),
              matrix(rep(est[3,],n3),ncol=3,byrow = T))
colnames(est0) <- c("a","b","s")
set.seed(1)
x <- apply(matrix(est0[,3],ncol=1),1,
           function(x){rweibull(45,shape=x,scale=(1/gamma(1/x+1)))})
x1 <- apply(x,2,function(s){cumsum(s)})
x2 <- matrix(0,ncol=3)
for(i in 1:nk){
  t <- cbind (rep(est0[i,1],45),rep(est0[i,2],45),x1[,i])
  x2 <- rbind(x2,t)
}
x2 <- x2[-1,]
Ti<- apply(x2,1,function(x){log(x[2]*x[3]/x[1]+1)/x[2]})
Ti <- matrix(Ti,ncol=nk)
Ti <- rbind(rep(0,nk),Ti)
rm(i,t)


#2. estimate the parameter of each sample to see the relationship between each sample

ll.wei = function(a,b,c,data){  
  sumt =sum(data);J=length(data)
  k <- c()
  for (s in 2:J){
    t<-  (c-1)*(lgamma(1/c+1)+log((a/b)*(exp(b*data[s])-exp(b*data[s-1]))))
    k <- append(k,t)
  }
  k1 <- c()
  for (s in 2:J){
    t1<- (a/b*gamma(1/c+1)*(exp(b*data[s])-exp(b*data[s-1])))^c
    k1 <- append(k1,t1)
  }
  ans= 45*lgamma(1/c+1)+45*log(c)+45*log(a)+sum(k)-sum(k1)+b*sumt
  -ans
}
est0
ll.wei(est[1,1],est[1,2],est[1,3],Ti[,1])

ll1.wei <- function(theta,data){
  ll.wei(theta[1]*10^(-1),theta[2]*10^(-1),theta[3]*10^(-1),data)
}
ll1.wei(c(est[1,1]*10,est[1,2]*10,est[1,3]*10),Ti[,1])

set.seed(109225017);r1 <- runif(50,0,100);r2 <- runif(50,0,100);r3 <- runif(50,0,100)
apply(cbind(r1,r2,r3),1, FUN = function(x){ll1.wei(x,Ti[,1])})
#apply(cbind(r1,r2,r3),1, FUN = function(x){optim(x,ll1.wei,hessian=T,data=Ti[,1])})#確定無Inf or NA

table2 <- matrix(0,nrow = 9,ncol =7)
system.time({
  for(k in 1:9){
    optim.result=matrix(0,nrow = 1,ncol = 7)
    for (i in 1:50){
      fit=optim(c(r1[i],r2[i],r3[i]),ll1.wei,hessian=T,data=Ti[,k])
      fit1=optim(fit$par,ll1.wei,hessian=T,data=Ti[,k])
      while (abs(fit1$value-fit$value)>10^(-3)){
        fit <- fit1
        fit1<- optim(fit$par,ll1.wei,hessian=T,data=Ti[,k])
      }
      I=solve(fit1$hessian)
      sda <- sqrt(I[1,1]*10^(-2))
      sdb <- sqrt(I[2,2]*10^(-2))
      sds <- sqrt(I[3,3]*10^(-2))
      t=cbind(fit1$par[1]*10^(-1),sda,
              fit1$par[2]*10^(-1),sdb,
              fit1$par[3]*10^(-1),sds,
              (-fit1$value))
      optim.result=rbind(optim.result,t)
    }
    optim.result <- optim.result[-1,]
    print(optim.result)
    ind <- which.max(optim.result[,7])
    table2[k,] <- optim.result[ind,]
  }
})
colnames(table2) <- c("a","sda","b","sdb","sigma","sds","logL")

table2

#ci
ci <- cbind(t(apply(table2[,1:2],1,function(x){x[1]+c(-1,1)*1.96*x[2]})),
            t(apply(table2[,3:4],1,function(x){x[1]+c(-1,1)*1.96*x[2]})),
            t(apply(table2[,5:6],1,function(x){x[1]+c(-1,1)*1.96*x[2]})))
as.numeric(ci)
colnames(ci) <- c("al","au","bl","bu","sl","su")
