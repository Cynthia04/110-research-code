Opt<-function(x){
  iter=x[4]
  initial=c(x[1],x[2],x[3])
  error=1
  before=0
  while(abs(error)-1e-15>0){
    step1=try(optim(initial,ll1.wei,control=list(factr=1e-15,maxit=10^9),hessian=T,data=Ti[,1]),silent = T)
    if(step1$convergence==0){
      initial <- step1$par
      error <- step1$value-before
      before <- step1$value
    }
  }
  parameter <- c(step1$par[1]*10^(-1),step1$par[2]*10^(-1),step1$par[3]*10^(-1))
  I=solve(step1$hessian)
  sd <- c(sqrt(I[1,1]*10^(-2)),sqrt(I[2,2]*10^(-2)),sqrt(I[3,3]*10^(-2)))
  return(c(parameter,-step1$value,sd)) #logL
}
rn <- cbind(r1,r2,r3)
system.time({
result=apply(as.matrix(rn),1,function(x){Opt(x)})
})
result <- t(result)
ind1 <- which.max(result[,4])
optim.result <- matrix(result[ind1,],ncol=1)
optim.result
